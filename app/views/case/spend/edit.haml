.case-spend-edit{'data-case-id': case_obj.id}
  %h1= title

  .inline-form
    %a.pure-button.button{href: url("/case/#{case_obj.id}/view##{spend_obj.anchor}")}
      %i.fa.fa-chevron-left= ""
      %span
        = t(:'back')

  .case-view-renderables
    - renderables.each do |rb|
      = haml "partials/case_renderable/#{rb[:type]}".to_sym, layout: false, locals: {rb: rb, can_edit: false}

  %form.pure-form.pure-form-stacked.form-main{method: 'POST', enctype: 'multipart/form-data'}
    %h1= t(:'case/spend/edit/edit/section_title')

    - unless spend_approver.nil? || spend_approver_self || has_role?('case:spend:can_approve')
      .message.message-warning
        = t(:'case/spend/edit/edit/errors/is_approved')

      %ul
        %li
          = succeed ': ' do
            = t(:'case/spend/edit/edit/amount_field')
          %span
            = t(:'case_renderable/spend/amount', amount: spend_amount)

        %li
          = succeed ': ' do
            = t(:'case/spend/edit/edit/note_field')

          %blockquote.blockquote-fancy
            = spend_notes

        - if spend_reimbursement
          %li
            = succeed ': ' do
              = t(:'case/spend/edit/edit/reimbursement_info')

            %blockquote.blockquote-fancy
              = spend_reimbursement_info

    - else
      %input{type: 'hidden', name: '_csrf', value: session[:csrf]}

      %label{for: 'amount'}= t(:'case/spend/edit/edit/amount_field')
      %input#amount{type: 'number', name: 'amount', required: true, value: sprintf('%.02f', spend_amount)}

      = haml :'partials/editor', layout: false, locals: {editor_name: 'content', editor_label: t(:'case/spend/edit/edit/note_field'), editor_data: spend_notes}
      .y-margin= ""
    
      %label{for: 'reimbursement'}
        %input#reimbursement{type: 'checkbox', name: 'reimbursement', checked: spend_reimbursement}
        = t(:'case/spend/edit/edit/is_reimbursement')

      = haml :'partials/editor', layout: false, locals: {editor_name: 'reimbursement_info', editor_label: t(:'case/spend/edit/edit/reimbursement_info'), editor_data: spend_reimbursement_info}
      .y-margin= ""

      %label{for: 'receipt'}
        = t(:'case/spend/add/receipt_file')
        - if spend_receipt
          %strong
            = t(:'case/spend/edit/edit/receipt_file/will_replace')

      %input#receipt{name: 'file', type: 'file', required: false}

      %label{for: 'complete'}
        %input#complete{type: 'checkbox', name: 'complete', checked: spend_complete}
        = t(:'case/spend/edit/edit/is_complete')

      %button.pure-button.button.button-primary{type: 'submit'}
        %i.fa.fa-pencil-square-o= ""
        = t(:'case/spend/edit/edit/submit')

  - if has_role?('case:delete_entry')
    %form.pure-form.pure-form-stacked.form-main{method: 'POST', action: urls[:delete]}
      %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
      %h1= t(:'case/spend/edit/delete/section_title')

      %label{for: 'delete-confirm'}= t(:'case/spend/edit/delete/confirm')
      %input#delete-confirm{name: 'confirm', type: 'text', required: true}

      %button.pure-button.button.button-error{type: 'submit'}
        %i.fa.fa-trash= ""
        = t(:'case/spend/edit/delete/submit')

.async-load{:'data-sources' => JSON.generate(['/static/editor.bundle.js'])}
