.case-task-edit{'data-case-id': case_obj.id}
  %h1= title

  .inline-form
    %a.pure-button.button{href: url("/case/#{case_obj.id}/view##{task_obj.anchor}")}
      %i.fa.fa-chevron-left= ""
      %span
        = t(:'back')

  .case-view-renderables
    - renderables.each do |rb|
      = haml "partials/case_renderable/#{rb[:type]}".to_sym, layout: false, locals: {rb: rb, can_edit: false}

  %form.pure-form.pure-form-stacked.form-main{method: 'POST'}
    %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
    %h1= t(:'case/task/edit/edit/section_title')

    %label{for: 'description'}
      = t(:'case/task/edit/edit/content_field')
      %span.badge= t(:'required')
    %input#description{name: 'content', type: 'text', required: true, placeholder: t(:'case/task/edit/edit/content_field'), value: task_content}

    %label{for: 'assignee'}
      = t(:'case/task/edit/edit/assignee_field')
      %span.badge= t(:'required')
    %input.user-search-field#assignee{name: 'assignee', type: 'text', required: true, placeholder: t(:'user_id'), value: task_assignee.id, 'data-only-case-assigned': case_obj.id.to_s}

    %label{for: 'deadline'}
      = t(:'case/task/edit/edit/deadline_field')
      %span.badge= t(:'required')
    %input#deadline{type: 'date', name: 'deadline', required: true, value: task_deadline.strftime('%Y-%m-%d')}

    %button.pure-button.button.button-primary{type: 'submit'}
      %i.fa.fa-pencil-square-o= ""
      = t(:'case/note/edit/edit/submit')

  - if task_obj.completion.nil?
    %form.pure-form.pure-form-stacked.form-main#mark-complete{method: 'POST', action: urls[:complete]}
      %h1= t(:'case/task/edit/complete/section_title')

      - if current_user.id == task_obj.assigned_to || current_user.id == task_obj.author
        %input{type: 'hidden', name: '_csrf', value: session[:csrf]}

        %p= t(:'case/task/edit/complete/content')

        %button.pure-button.button.button-success{type: 'submit'}
          %i.fa.fa-check= ""
          = t(:'case/task/edit/complete/submit')

      - else
        .message.message-error
          = t(:'case/task/edit/complete/errors/not_author')

  - if has_role?('case:delete_entry')
    %form.pure-form.pure-form-stacked.form-main{method: 'POST', action: urls[:delete]}
      %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
      %h1= t(:'case/task/edit/delete/section_title')

      %label{for: 'delete-confirm'}= t(:'case/task/edit/delete/confirm')
      %input#delete-confirm{name: 'confirm', type: 'text', required: true}

      %button.pure-button.button.button-error{type: 'submit'}
        %i.fa.fa-trash= ""
        = t(:'case/task/edit/delete/submit')

.async-load{:'data-sources' => JSON.generate(['/static/user_search.bundle.js'])}
