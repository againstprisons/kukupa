.case-edit{'data-case-id': case_obj.id}
  %h1= title

  = haml :'partials/case_header', layout: false, locals: {caseid: case_obj.id, casetype: case_obj.type, show: case_show}

  - if case_show[:triage] && case_triage_task.nil?
    .form-main#triage-task
      %h1= t(:'case/edit/triage_task/section_title')
      %p= t(:'case/edit/triage_task/content')

      - if case_assigned.empty?
        .message.message-warning
          = t(:'case/edit/triage_task/no_assignees')

      - else
        %ul.block-list
          - case_assigned.each do |u|
            %li    
              %form.block-form{method: 'POST', action: url("/case/#{case_obj.id}/edit/create-triage-task")}
                %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
                %input{type: 'hidden', name: 'assignee', value: u[:id]}

                %button.pure-button.button{type: 'submit'}
                  %i.fa.fa-check-square-o= ""
                  = t(:'case/edit/triage_task/submit')
                
                &nbsp;
                  
                - if has_role?("case:search")
                  %a{href: url("/case/search?type=advocate&query=#{u[:id]}"), title: "User[#{u[:id]}]"}><
                    &= u[:name]

                - else
                  %span{title: "User[#{u[:id]}]"}><
                    &= u[:name]
                    
                - if u[:id] == cuser.id
                  &nbsp;
                  %span.badge
                    %i.fa.fa-user-o= ""
                    = t(:'thats_you')

  %form.pure-form.pure-form-stacked.form-main{method: 'POST'}
    %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
    %h1= t(:'case/edit/edit/section_title')

    - case_fields.each do |fd|
      - friendly = t(fd[:tl_key], casetype: case_obj.type)
      - value = case_editables[fd[:editable_name] || fd[:name]]
      - if fd[:type] == :date
        - value = value&.strftime('%Y-%m-%d')

      - unless %i[checkbox editor].include?(fd[:type])
        %label{for: fd[:name]}
          = friendly
          - if fd[:required]
            %span.badge= t(:'required')

      - if %i[text number date].include?(fd[:type])
        %input{type: fd[:type], name: fd[:field_name] || fd[:name], id: fd[:name], required: fd[:required] || false, placeholder: friendly, value: value}

      - elsif fd[:type] == :select
        %select{name: fd[:field_name] || fd[:name], id: fd[:name], required: fd[:required] || false, multiple: fd[:multiple] || false}
          - select_options = fd[:select_options]
          - select_options = select_options.call() if select_options.is_a?(Proc)
          - select_options.each do |opt|
            %option{value: opt[:value], selected: value.is_a?(Array) ? value.include?(opt[:value]) : value == opt[:value]}
              = t(opt[:tl_key], casetype: case_obj.type)

      - elsif fd[:type] == :checkbox
        %label{for: fd[:name]}
          %input{type: :checkbox, name: fd[:field_name] || fd[:name], id: fd[:name], checked: value}
          = friendly
          - if fd[:required]
            %span.badge= t(:'required')

      - elsif fd[:type] == :editor
        = haml :'partials/editor', layout: false, locals: {editor_name: fd[:field_name] || fd[:name], editor_label: friendly, editor_data: value}
        .y-margin= ""

    %button.pure-button.button.button-primary{type: 'submit'}
      %i.fa.fa-save= ""
      = t(:'case/edit/edit/submit')

  - if case_show[:prison]
    %form.pure-form.pure-form-stacked.form-main{method: 'POST', action: url("/case/#{case_obj.id}/edit/prison")}
      %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
      %h1= t(:'case/edit/prison/section_title')

      %label{for: 'prison'}= t(:'case/edit/prison/field_prison')
      %select#prison{name: 'prison'}
        %option{value: 'unknown', selected: case_prison.nil?}= t(:'unknown')
        - prisons.each do |prison|
          %option{value: prison[:id], selected: case_prison&.id == prison[:id]}
            &= prison[:name]

      %label{for: 'prn'}= t(:'case/edit/prison/field_prisoner_number')
      %input#prn{name: 'prn', value: case_editables[:prn]}

      %button.pure-button.button{type: 'submit'}
        %i.fa.fa-save= ""
        = t(:'case/edit/prison/submit')

  - if has_role?('case:assignees:unassign')
    .form-main
      %h1= t(:'case/edit/assignees/unassign/section_title')
      
      - if case_assigned.empty?
        %p= t(:'case/edit/assignees/unassign/no_assignees')

      - else
        %ul.block-list
          - case_assigned.each do |u|
            %li    
              %form.block-form{method: 'POST', action: url("/case/#{case_obj.id}/edit/unassign")}
                %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
                %input{type: 'hidden', name: 'assignee', value: u[:id]}

                %button.pure-button.button{type: 'submit'}
                  %i.fa.fa-minus-square-o= ""
                  = t(:'case/edit/assignees/unassign/submit')
                
                &nbsp;
                  
                - if has_role?("case:search")
                  %a{href: url("/case/search?type=advocate&query=#{u[:id]}"), title: "User[#{u[:id]}]"}><
                    &= u[:name]

                - else
                  %span{title: "User[#{ad[:id]}]"}><
                    &= u[:name]

                - unless u[:tags].empty?
                  %span
                    = surround ' (', ') ' do
                      = u[:tags].map{|t| t("tag/#{t}".to_sym)}.join(', ')

                - if u[:id] == cuser.id
                  &nbsp;
                  %span.badge
                    %i.fa.fa-user-o= ""
                    = t(:'thats_you')

  - if has_role?('case:assignees:assign')
    .form-main
      %h1= t(:'case/edit/assignees/assign/section_title')

      - if assignable_suggested.count.positive?
        %strong= t(:'case/edit/assignees/assign/suggested')
        %ul.block-list
          - assignable_suggested.each do |u|
            %li
              %form.block-form{method: 'POST', action: url("/case/#{case_obj.id}/edit/assign")}
                %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
                %input{type: 'hidden', name: 'assignee', value: u[:id]}
                %button.pure-button.button{type: 'submit'}
                  %i.fa.fa-check-square-o= ""
                  = t(:'case/edit/assignees/assign/suggested/submit')

                %span
                  &= u[:name]

                - unless u[:tags].empty?
                  %span
                    = surround ' (', ') ' do
                      = u[:tags].map{|t| t("tag/#{t}".to_sym)}.join(', ')

      %form.pure-form.pure-form-stacked{method: 'POST', action: url("/case/#{case_obj.id}/edit/assign")}
        %input{type: 'hidden', name: '_csrf', value: session[:csrf]}

        %label{for: 'assignee'}= t(:'case/edit/assignees/assign/assignee_field')
        %input.user-search-field#assignee{name: 'assignee', type: 'text', required: true, placeholder: t(:'user_id'), 'data-only-assignable': 1}

        %button.pure-button.button.button-primary{type: 'submit'}
          %i.fa.fa-user-o= ""
          = t(:'case/edit/assignees/assign/submit')

  - if case_show[:reconnect]
    .form-main
      %h1= t(:'case/edit/reconnect/section_title')

      %p
        - if case_reconnect[:id] && case_reconnect[:id].to_i.positive?
          = t(:'case/edit/reconnect/link_status/linked', name: case_reconnect[:name])
        - else
          = t(:'case/edit/reconnect/link_status/not_linked')

      - if has_role?('case:reconnect')
        %a.pure-button.button{href: url("/case/#{case_obj.id}/edit/rc")}
          %i.fa.fa-link=""
          = t(:'case/edit/reconnect/submit')

  - if case_show[:triage] && has_role?('case:triage:reset') && !case_triage_task.nil?
    %form.pure-form.pure-form-stacked.form-main{method: 'POST', action: url("/case/#{case_obj.id}/edit/reset-triage-task")}
      %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
      %h1= t(:'case/edit/triage_task/reset/section_title')
      %p= t(:'case/edit/triage_task/reset/content')

      %label{for: 'reset_triage_confirm'}
        %input#reset_triage_confirm{type: 'checkbox', name: 'confirm', required: true}
        = t(:'case/edit/triage_task/reset/confirm_checkbox')

      %button.pure-button.button.button-error{type: 'submit'}
        %i.fa.fa-circle-o=""
        = t(:'case/edit/triage_task/reset/submit')

  %form.pure-form.pure-form-stacked.form-main{method: 'POST', action: url("/case/#{case_obj.id}/edit/close-case")}
    %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
    %h1= t(:'case/edit/close_case/section_title')
    %p= t(:'case/edit/close_case/content')

    %label{for: 'close_case_confirm'}
      %input#close_case_confirm{type: 'checkbox', name: 'confirm', required: true}
      = t(:'case/edit/close_case/confirm_checkbox')

    %button.pure-button.button.button-error{type: 'submit'}
      %i.fa.fa-times-circle=""
      = t(:'case/edit/close_case/submit')

.async-load{:'data-sources' => JSON.generate(['/static/editor.bundle.js', '/static/user_search.bundle.js'])}
