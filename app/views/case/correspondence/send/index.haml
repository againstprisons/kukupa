.case-send-mail{'data-case-id': case_obj.id}
  %h1= title

  = haml :'partials/case_header', layout: false, locals: {caseid: case_obj.id, casetype: case_obj.type}

  %form.pure-form.pure-form-stacked.form-main{method: 'POST'}
    %h1= t(:'case/correspondence/send/compose/section_title')
    
    %a.pure-button.button{href: url("/case/#{case_obj.id}/correspondence/send/templates")}
      %i.fa.fa-list= ""
      = t(:'case/correspondence/send/templates/view_templates')

    - if template_name
      %p= t(:'case/correspondence/send/compose/is_template', name: template_name)

    %input{type: 'hidden', name: '_csrf', value: session[:csrf]}
    %input{type: 'hidden', name: 'preview', value: '1'}

    %label{for: 'subject'}= t(:'case/correspondence/send/compose/subject')
    %input#subject{type: 'text', name: 'subject', required: true, placeholder: t(:'case/correspondence/send/compose/subject'), value: compose_subject}

    = haml :'partials/editor', layout: false, locals: {editor_name: 'content', editor_label: t(:'case/correspondence/send/compose/content'), editor_data: compose_content}
    .y-margin= ""

    %button.pure-button.button.button-primary{type: 'submit'}
      %i.fa.fa-arrow-right= ""
      = t(:'case/correspondence/send/compose/submit')

.async-load{:'data-sources' => JSON.generate(['/static/editor.bundle.js'])}
